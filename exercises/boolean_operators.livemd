# Boolean Operators

## Setup

Ensure you run the `ea` command to evaluate all Elixir cells before starting. Alternatively,
you can evaluate the Elixir cells as you read.

## Boolean Diagrams

In each Elixir cell or text input enter the **boolean** or **boolean operator** for the blank that would satisfy the diagram.

```mermaid
flowchart LR
a[true] --> and
b[____] --> and
and --> false
```

```elixir
false
```

```mermaid
flowchart LR
a[false] --> or
b[____] --> or
or --> true
```

```elixir
true
```

```mermaid
flowchart LR
a[true] --> c[or]
b[____] --> c
c --> d[false]
d --> f[or]
e[____] --> f
not --> e
f --> true
```

```elixir
true, false
```

```mermaid
flowchart LR
  a[true] --> c[and]
  not --> b
  b[____] --> c
  c --> true
```

```elixir
false
```

```mermaid
flowchart LR
  a[true]
  b[____]
  c[and]
  d[true]
  a --> c
  b --> c
  c --> d
```

```elixir
true
```

```mermaid
flowchart LR
  a[false]
  b[____]
  c[or]
  d[false]
  not --> b
  a --> c
  b --> c
  c --> d
```

```elixir
true
```

```mermaid
flowchart LR
a[true]
b[true]
c[____]
d[true]
a --> c
b --> c
c --> d
not --> b
```

```elixir
Kino.Input.text("or")
```

```mermaid
flowchart LR
a[true]
b[true]
c[____]
d[false]
a --> c
b --> c
c --> d
not --> b
```

```elixir
Kino.Input.text("and")
```

```mermaid
flowchart LR
  a[true]
  b[true]
  c[and]
  d[false]
  a --> c
  b --> c
  c --> d
  e[____] --> b
```

```elixir
Kino.Input.text("not")
```

## Fill In The Blank

Evaluate the Elixir cell below. In the text inputs, enter the **boolean** or **boolean operator** that satisfies the blank.
If `and` and `or` both satisfy the blank, then prefer `and`.

```elixir
Utils.form(:boolean_fill_in_the_blank)
```
