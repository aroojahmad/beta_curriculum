# Mazes

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "utils"}
])
```

## Navigation

[Return Home](../start.livemd)

## Overview

In the Elixir cell below, you're going to create a game where players hunt through the following dungeon maze for treasure.

![](images/treasure_hunt.png)

Players should be able to use the cardinal directions `north`, `south`, `east` and `west` to navigate for treasure.

As each player goes through the maze, you only need to support the most direct path to navigate to each piece of treasure from
the starting line.

Your maze should be a **map** with atom keys. bind the maze to the `dungeon_maze` variable

The treasures are:

* **a** `:kings_crown`
* **b** `[gold_coins: 20, rubies: 5, sapphires: 2]`
* **c** `{:magic, "wand"}`
* **d** `["diamonds", "gold bars"]`

```elixir
dungeon_maze = #i'll do this later
```

In the Elixir cell below, demonstrate how to find each of your treasures in the `dungeon_maze` using the **map.key** notation.

```elixir
a = nil
b = nil
c = nil
d = nil
```

In the Elixir cell below, you're going to use the map update syntax `%{dungeon_maze | key: "new_value"}`
to change the treasures in the `dungeon_maze`.

Change them to:

* **a** `"rubies"`
* **b** `{:gold, "horde"}`
* **c** `[{:copper, 2}, {:silver, 3}]`
* **d** `%{gold_coins: 100}`

```elixir

```
